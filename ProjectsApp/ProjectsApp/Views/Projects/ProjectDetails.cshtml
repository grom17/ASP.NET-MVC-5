@model ProjectModel
<p>
    <input id="backToList" type="button" value="@Messages.BackBtn" class="btn btn-default"
           onclick="BackToList()" />
</p>

@using (Ajax.BeginForm("UpdateProjectDetails", new { }, new AjaxOptions() {
    OnBegin = "OnBeginUpdateProject", OnComplete = "OnCompleteUpdateProject",
    OnSuccess = "OnSuccessUpdateProject", OnFailure = "AjaxCommonErrorHandling" },
    new { Id = "projectDetailForm", @class = "form-horizontal", role = "form" }))
{
    <hr />
    @Html.HiddenFor(m => m.ProjectId)
    @Html.HiddenFor(m => m.ProjectManagerId)
    <div class="form-group">
        @Html.LabelFor(m => m.ClientCompanyName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ClientCompanyName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ClientCompanyName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ExecutiveCompanyName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ExecutiveCompanyName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ExecutiveCompanyName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row narrow-row cr-user">
        @Html.LabelFor(u => u.ProjectManagerId, new { @class = "col-md-2 control-label" })
        <div class="controls">
            @Html.EditorFor(u => u.ProjectManagerId)
            <div id="username-suggestions-container" class="autocomplete-suggestions">
            </div>
        </div>
    </div>
    <div class="row narrow-row cr-user">
        @Html.LabelFor(c => c.ProjectManagerId, new { @class = "col-md-2 control-label" })
        <div class="controls">
            @Html.DropDownListFor(c => c.ProjectManagerId, (ViewData["EmployeeList"] as IEnumerable<SelectListItem>)
                                                        .Select(f => new SelectListItem
                                                        {
                                                            Selected = f.ToString() == Model.ProjectManagerName,
                                                            Text = f.Value,
                                                            Value = f.Value
                                                        }))
        </div>
    </div>
    <div class="row cr-dates">
        <div class="form-group">
            <div class='col-sm-2'>
                @Html.LabelFor(u => u.StartDate, new { @class = "label-left" })
            </div>
            <div class='col-sm-3'>
                <div class='input-group date'>
                    <input type="text" class="form-control" id="StartDate" name="StartDate" value="@Model.StartDate.Value.ToString(ViewBag.NetDateTimeFormat)" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
            <div class='col-sm-1-5'>
                @Html.LabelFor(u => u.EndDate, new { @class = "label-left left" })
            </div>
            <div class='col-sm-3'>
                <div class='input-group date'>
                    <input type="text" class="form-control" id="EndDate" name="EndDate" value="@Model.EndDate.Value.ToString(ViewBag.NetDateTimeFormat)" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Priority, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Priority, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Priority, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(c => c.Comment, new { @class = "label-left" })
        <div class="controls">
            @Html.TextAreaFor(c => c.Comment, new { rows = 4 })
        </div>
    </div>

    <div id="teacherStudents" data-action-url="@Url.Action("LoadTeacherStudents")" data-loading-msg="Загрузка списка студентов">
        <table id="teacherStudentsList" class="display" cellspacing="0">
            <thead>
                <tr>
                    <th></th>
                    <th><input type="hidden" id="StudentId"></th>
                    <th>Студент</th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th></th>
                    <th>StudentId</th>
                    <th>Студент</th>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="updateTeacher" type="button" value="Обновить" class="btn btn-default"
                    data-loading-msg="Обновление данных преподавателя" 
                    onclick="teacherDetailFormSubmit()" />
            <input id="deleteTeacher" type="button" value="Удалить" class="btn btn-default"
                    data-loading-msg="Удаление преподавателя"
                    onclick="TeacherDelete(@Model.TeacherId)" data-action-url="@Url.Action("DeleteTeacher")" />
        </div>
    </div>
}



