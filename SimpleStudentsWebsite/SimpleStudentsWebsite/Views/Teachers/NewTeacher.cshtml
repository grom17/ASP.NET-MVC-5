@model NewTeacher
@using (Ajax.BeginForm("CreateTeacher", new { }, new AjaxOptions() {
        OnBegin = "OnBeginCreateTeacher", OnComplete = "OnCompleteCreateTeacher",
        OnSuccess = "OnSuccessCreateTeacher", OnFailure = "AjaxCommonErrorHandling", HttpMethod = "POST"
    },
    new { Id = "newTeacherForm", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    // TODO: Get all text messages from messages.xml

    // TODO: Make one form for teacher/student creation

        <h4>Добавить преподавателя</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="newTeacherStudents" data-action-url="@Url.Action("LoadTeacherStudents")" data-loading-msg="Загрузка списка студентов">
            <table id="newTeacherStudentsList" class="display" cellspacing="0">
                <thead>
                    <tr>
                        <th></th>
                        <th><input type="hidden" id="StudentId"></th>
                        <th>Студент</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th></th>
                        <th>StudentId</th>
                        <th>Студент</th>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="createTeacherBtn" type="button" value="Добавить" class="btn btn-default"
                       data-loading-msg="Добавление преподавателя"
                       onclick="newTeacherFormSubmit()" />
            </div>
        </div>
}
<br />
<p>
    <input id="backToTeachersList" type="button" value="Назад" class="btn btn-default"
           onclick="BackToTeachersList()" />
</p>
