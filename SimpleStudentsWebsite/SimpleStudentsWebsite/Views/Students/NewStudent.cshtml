@model NewStudent
@using (Ajax.BeginForm("CreateStudent", new { }, new AjaxOptions() { },
        new { Id = "newStudentForm", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()


        <h4>Добавить студента</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecretKey, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecretKey, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecretKey, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="addTeacherSelect" data-action-url="@Url.Action("LoadTeachers")" data-loading-msg="Загрузка преподавателей">
        </div>
        <div id="studentGrades" data-action-url="@Url.Action("LoadStudentGrades")" data-loading-msg="Загрузка оценок">
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="createStudentBtn" type="submit" value="Добавление студента" class="btn btn-default"
                       data-loading-msg="Добавление студента"
                       onclick="newStudentFormSubmit()" />
            </div>
        </div>
}
<br />
<p>
    <input id="backToList" type="button" value="Назад" class="btn btn-default"
           onclick="BackToList()" />
</p>
